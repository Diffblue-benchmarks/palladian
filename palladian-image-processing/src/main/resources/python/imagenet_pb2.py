# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: imagenet.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='imagenet.proto',
  package='ws.palladian.kaggle.restaurants.features.imagenet',
  serialized_pb=_b('\n\x0eimagenet.proto\x12\x31ws.palladian.kaggle.restaurants.features.imagenet\"\x15\n\x05Image\x12\x0c\n\x04\x64\x61ta\x18\x01 \x02(\x0c\"\x91\x01\n\nCategories\x12X\n\x08\x63\x61tegory\x18\x01 \x03(\x0b\x32\x46.ws.palladian.kaggle.restaurants.features.imagenet.Categories.Category\x1a)\n\x08\x43\x61tegory\x12\x0e\n\x06nodeId\x18\x01 \x02(\x05\x12\r\n\x05score\x18\x02 \x02(\x01\x32\x92\x01\n\x08ImageNet\x12\x85\x01\n\x08\x43lassify\x12\x38.ws.palladian.kaggle.restaurants.features.imagenet.Image\x1a=.ws.palladian.kaggle.restaurants.features.imagenet.Categories\"\x00\x42\x43\n1ws.palladian.kaggle.restaurants.features.imagenetB\x0eImageNetProtos')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_IMAGE = _descriptor.Descriptor(
  name='Image',
  full_name='ws.palladian.kaggle.restaurants.features.imagenet.Image',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='data', full_name='ws.palladian.kaggle.restaurants.features.imagenet.Image.data', index=0,
      number=1, type=12, cpp_type=9, label=2,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=69,
  serialized_end=90,
)


_CATEGORIES_CATEGORY = _descriptor.Descriptor(
  name='Category',
  full_name='ws.palladian.kaggle.restaurants.features.imagenet.Categories.Category',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodeId', full_name='ws.palladian.kaggle.restaurants.features.imagenet.Categories.Category.nodeId', index=0,
      number=1, type=5, cpp_type=1, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='score', full_name='ws.palladian.kaggle.restaurants.features.imagenet.Categories.Category.score', index=1,
      number=2, type=1, cpp_type=5, label=2,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=197,
  serialized_end=238,
)

_CATEGORIES = _descriptor.Descriptor(
  name='Categories',
  full_name='ws.palladian.kaggle.restaurants.features.imagenet.Categories',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='category', full_name='ws.palladian.kaggle.restaurants.features.imagenet.Categories.category', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CATEGORIES_CATEGORY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=93,
  serialized_end=238,
)

_CATEGORIES_CATEGORY.containing_type = _CATEGORIES
_CATEGORIES.fields_by_name['category'].message_type = _CATEGORIES_CATEGORY
DESCRIPTOR.message_types_by_name['Image'] = _IMAGE
DESCRIPTOR.message_types_by_name['Categories'] = _CATEGORIES

Image = _reflection.GeneratedProtocolMessageType('Image', (_message.Message,), dict(
  DESCRIPTOR = _IMAGE,
  __module__ = 'imagenet_pb2'
  # @@protoc_insertion_point(class_scope:ws.palladian.kaggle.restaurants.features.imagenet.Image)
  ))
_sym_db.RegisterMessage(Image)

Categories = _reflection.GeneratedProtocolMessageType('Categories', (_message.Message,), dict(

  Category = _reflection.GeneratedProtocolMessageType('Category', (_message.Message,), dict(
    DESCRIPTOR = _CATEGORIES_CATEGORY,
    __module__ = 'imagenet_pb2'
    # @@protoc_insertion_point(class_scope:ws.palladian.kaggle.restaurants.features.imagenet.Categories.Category)
    ))
  ,
  DESCRIPTOR = _CATEGORIES,
  __module__ = 'imagenet_pb2'
  # @@protoc_insertion_point(class_scope:ws.palladian.kaggle.restaurants.features.imagenet.Categories)
  ))
_sym_db.RegisterMessage(Categories)
_sym_db.RegisterMessage(Categories.Category)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\n1ws.palladian.kaggle.restaurants.features.imagenetB\016ImageNetProtos'))
import abc
import six
from grpc.beta import implementations as beta_implementations
from grpc.framework.common import cardinality
from grpc.framework.interfaces.face import utilities as face_utilities

class BetaImageNetServicer(six.with_metaclass(abc.ABCMeta, object)):
  """<fill me in later!>"""
  @abc.abstractmethod
  def Classify(self, request, context):
    raise NotImplementedError()

class BetaImageNetStub(six.with_metaclass(abc.ABCMeta, object)):
  """The interface to which stubs will conform."""
  @abc.abstractmethod
  def Classify(self, request, timeout):
    raise NotImplementedError()
  Classify.future = None

def beta_create_ImageNet_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
  import imagenet_pb2
  import imagenet_pb2
  request_deserializers = {
    ('ws.palladian.kaggle.restaurants.features.imagenet.ImageNet', 'Classify'): imagenet_pb2.Image.FromString,
  }
  response_serializers = {
    ('ws.palladian.kaggle.restaurants.features.imagenet.ImageNet', 'Classify'): imagenet_pb2.Categories.SerializeToString,
  }
  method_implementations = {
    ('ws.palladian.kaggle.restaurants.features.imagenet.ImageNet', 'Classify'): face_utilities.unary_unary_inline(servicer.Classify),
  }
  server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
  return beta_implementations.server(method_implementations, options=server_options)

def beta_create_ImageNet_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
  import imagenet_pb2
  import imagenet_pb2
  request_serializers = {
    ('ws.palladian.kaggle.restaurants.features.imagenet.ImageNet', 'Classify'): imagenet_pb2.Image.SerializeToString,
  }
  response_deserializers = {
    ('ws.palladian.kaggle.restaurants.features.imagenet.ImageNet', 'Classify'): imagenet_pb2.Categories.FromString,
  }
  cardinalities = {
    'Classify': cardinality.Cardinality.UNARY_UNARY,
  }
  stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
  return beta_implementations.dynamic_stub(channel, 'ws.palladian.kaggle.restaurants.features.imagenet.ImageNet', cardinalities, options=stub_options)
# @@protoc_insertion_point(module_scope)
